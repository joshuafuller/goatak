// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: cotevent.proto

package cotproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A note about timestamps:
// Uses "timeMs" units, which is number of milliseconds since
// 1970-01-01 00:00:00 UTC
//
// All items are required unless otherwise noted!
// "required" means if they are missing in the XML during outbound
// conversion to protobuf, the message will be
// rejected
type CotEvent struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Type   string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`     // <event type="x">
	Access string                 `protobuf:"bytes,2,opt,name=access,proto3" json:"access,omitempty"` // optional, but see below!
	// field was optional in early
	// cot implementations but now required
	// in MIL-STD-6090.
	// This message definition treats as
	// "optional" due to legacy definition/use,
	// but updated/new clients should be
	// populating on all outgoing message and
	// should treat any missing/empty value
	// as CoT value "Undefined".
	// A CoT/XML value of "Undefined" for this
	// field should be conveyed in this message
	// by omitting this value for compactness
	Qos           string `protobuf:"bytes,3,opt,name=qos,proto3" json:"qos,omitempty"`                      // optional
	Opex          string `protobuf:"bytes,4,opt,name=opex,proto3" json:"opex,omitempty"`                    // optional
	Caveat        string `protobuf:"bytes,16,opt,name=caveat,proto3" json:"caveat,omitempty"`               // optional
	ReleaseableTo string `protobuf:"bytes,17,opt,name=releaseableTo,proto3" json:"releaseableTo,omitempty"` // optional
	Uid           string `protobuf:"bytes,5,opt,name=uid,proto3" json:"uid,omitempty"`                      // <event uid="x">
	SendTime      uint64 `protobuf:"varint,6,opt,name=sendTime,proto3" json:"sendTime,omitempty"`           // <event time="x"> converted to timeMs
	StartTime     uint64 `protobuf:"varint,7,opt,name=startTime,proto3" json:"startTime,omitempty"`         // <event start="x"> converted to timeMs
	StaleTime     uint64 `protobuf:"varint,8,opt,name=staleTime,proto3" json:"staleTime,omitempty"`         // <event stale="x"> converted to timeMs
	How           string `protobuf:"bytes,9,opt,name=how,proto3" json:"how,omitempty"`                      // <event how="x">
	// <point>
	Lat float64 `protobuf:"fixed64,10,opt,name=lat,proto3" json:"lat,omitempty"` // <point lat="x">
	Lon float64 `protobuf:"fixed64,11,opt,name=lon,proto3" json:"lon,omitempty"` // <point lon="x">
	Hae float64 `protobuf:"fixed64,12,opt,name=hae,proto3" json:"hae,omitempty"` // <point hae="x"> use 999999 for unknown
	Ce  float64 `protobuf:"fixed64,13,opt,name=ce,proto3" json:"ce,omitempty"`   // <point ce="x"> use 999999 for unknown
	Le  float64 `protobuf:"fixed64,14,opt,name=le,proto3" json:"le,omitempty"`   // <point ce="x"> use 999999 for unknown
	// comprises children of <detail>
	// This is optional - if omitted, then the cot message
	// had no data under <detail>
	Detail        *Detail `protobuf:"bytes,15,opt,name=detail,proto3" json:"detail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CotEvent) Reset() {
	*x = CotEvent{}
	mi := &file_cotevent_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CotEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CotEvent) ProtoMessage() {}

func (x *CotEvent) ProtoReflect() protoreflect.Message {
	mi := &file_cotevent_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CotEvent.ProtoReflect.Descriptor instead.
func (*CotEvent) Descriptor() ([]byte, []int) {
	return file_cotevent_proto_rawDescGZIP(), []int{0}
}

func (x *CotEvent) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CotEvent) GetAccess() string {
	if x != nil {
		return x.Access
	}
	return ""
}

func (x *CotEvent) GetQos() string {
	if x != nil {
		return x.Qos
	}
	return ""
}

func (x *CotEvent) GetOpex() string {
	if x != nil {
		return x.Opex
	}
	return ""
}

func (x *CotEvent) GetCaveat() string {
	if x != nil {
		return x.Caveat
	}
	return ""
}

func (x *CotEvent) GetReleaseableTo() string {
	if x != nil {
		return x.ReleaseableTo
	}
	return ""
}

func (x *CotEvent) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *CotEvent) GetSendTime() uint64 {
	if x != nil {
		return x.SendTime
	}
	return 0
}

func (x *CotEvent) GetStartTime() uint64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *CotEvent) GetStaleTime() uint64 {
	if x != nil {
		return x.StaleTime
	}
	return 0
}

func (x *CotEvent) GetHow() string {
	if x != nil {
		return x.How
	}
	return ""
}

func (x *CotEvent) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *CotEvent) GetLon() float64 {
	if x != nil {
		return x.Lon
	}
	return 0
}

func (x *CotEvent) GetHae() float64 {
	if x != nil {
		return x.Hae
	}
	return 0
}

func (x *CotEvent) GetCe() float64 {
	if x != nil {
		return x.Ce
	}
	return 0
}

func (x *CotEvent) GetLe() float64 {
	if x != nil {
		return x.Le
	}
	return 0
}

func (x *CotEvent) GetDetail() *Detail {
	if x != nil {
		return x.Detail
	}
	return nil
}

var File_cotevent_proto protoreflect.FileDescriptor

const file_cotevent_proto_rawDesc = "" +
	"\n" +
	"\x0ecotevent.proto\x12\x0fgoatak.cotproto\x1a\fdetail.proto\"\x9d\x03\n" +
	"\bCotEvent\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x16\n" +
	"\x06access\x18\x02 \x01(\tR\x06access\x12\x10\n" +
	"\x03qos\x18\x03 \x01(\tR\x03qos\x12\x12\n" +
	"\x04opex\x18\x04 \x01(\tR\x04opex\x12\x16\n" +
	"\x06caveat\x18\x10 \x01(\tR\x06caveat\x12$\n" +
	"\rreleaseableTo\x18\x11 \x01(\tR\rreleaseableTo\x12\x10\n" +
	"\x03uid\x18\x05 \x01(\tR\x03uid\x12\x1a\n" +
	"\bsendTime\x18\x06 \x01(\x04R\bsendTime\x12\x1c\n" +
	"\tstartTime\x18\a \x01(\x04R\tstartTime\x12\x1c\n" +
	"\tstaleTime\x18\b \x01(\x04R\tstaleTime\x12\x10\n" +
	"\x03how\x18\t \x01(\tR\x03how\x12\x10\n" +
	"\x03lat\x18\n" +
	" \x01(\x01R\x03lat\x12\x10\n" +
	"\x03lon\x18\v \x01(\x01R\x03lon\x12\x10\n" +
	"\x03hae\x18\f \x01(\x01R\x03hae\x12\x0e\n" +
	"\x02ce\x18\r \x01(\x01R\x02ce\x12\x0e\n" +
	"\x02le\x18\x0e \x01(\x01R\x02le\x12/\n" +
	"\x06detail\x18\x0f \x01(\v2\x17.goatak.cotproto.DetailR\x06detailB&H\x03Z\"github.com/kdudkov/goatak/cotprotob\x06proto3"

var (
	file_cotevent_proto_rawDescOnce sync.Once
	file_cotevent_proto_rawDescData []byte
)

func file_cotevent_proto_rawDescGZIP() []byte {
	file_cotevent_proto_rawDescOnce.Do(func() {
		file_cotevent_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cotevent_proto_rawDesc), len(file_cotevent_proto_rawDesc)))
	})
	return file_cotevent_proto_rawDescData
}

var file_cotevent_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_cotevent_proto_goTypes = []any{
	(*CotEvent)(nil), // 0: goatak.cotproto.CotEvent
	(*Detail)(nil),   // 1: goatak.cotproto.Detail
}
var file_cotevent_proto_depIdxs = []int32{
	1, // 0: goatak.cotproto.CotEvent.detail:type_name -> goatak.cotproto.Detail
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_cotevent_proto_init() }
func file_cotevent_proto_init() {
	if File_cotevent_proto != nil {
		return
	}
	file_detail_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cotevent_proto_rawDesc), len(file_cotevent_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cotevent_proto_goTypes,
		DependencyIndexes: file_cotevent_proto_depIdxs,
		MessageInfos:      file_cotevent_proto_msgTypes,
	}.Build()
	File_cotevent_proto = out.File
	file_cotevent_proto_goTypes = nil
	file_cotevent_proto_depIdxs = nil
}
